COPY ~%MOD_FOLDER%/Inspirations~ ~OVERRIDE~

ADD_PROJECTILE ~%MOD_FOLDER%/inspirations/c0bdipr.PRO~ ~C0 Inspiration~

ACTION_IF FILE_EXISTS_IN_GAME ~CLABBA01.2DA~ BEGIN
COPY_EXISTING ~CLABBA01.2DA~ OVERRIDE
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 1 STR_VAR f_Entry = GA_C0BDI00 END // Inspirations
END

DEFINE_ACTION_FUNCTION cd_new_portrait_icon
  INT_VAR string = 0
  STR_VAR bam_file = "****"
  RET     icon
  BEGIN

  COPY_EXISTING ~statdesc.2da~ ~override~
    COUNT_2DA_ROWS 3 count
    READ_2DA_ENTRY (count - 1) 0 3 icon
    SET icon += 1

  APPEND ~statdesc.2da~ ~%icon% %string% %bam_file%~ UNLESS ~%bam_file%~

END

///////////////////////////////////////////////////////////////////////////
// Update Kit Descriptions                                               //
///////////////////////////////////////////////////////////////////////////
ACTION_FOR_EACH description IN 
    clastext  
  BEGIN
    ACTION_IF FILE_EXISTS_IN_GAME ~%description%.2da~ BEGIN
      COPY_EXISTING ~%description%.2DA~ ~override~
      COUNT_2DA_COLS col_count
      COUNT_2DA_ROWS col_count rows
      FOR (index = 0; index < rows; ++index) BEGIN
        READ_2DA_ENTRY index 0 col_count row_name
//bard
        PATCH_IF "%row_name%" STRING_EQUAL_CASE "BARD" BEGIN
          READ_2DA_ENTRY index 4 col_count bard_desc
          SPRINT old_bard ~– May use Bard Song ability.~
          SPRINT new_bard ~– May use Bardic Inspirations. Inspirations provide various benefits that persist so long as they are within visual range of the bard.
– May use Bard Song ability.~
          GET_STRREF %bard_desc% bard_text
          INNER_PATCH_SAVE bard_text ~%bard_text%~ BEGIN
            REPLACE_TEXTUALLY ~%old_bard%~ ~%new_bard%~
          END
          INNER_ACTION BEGIN
            STRING_SET_EVALUATE ~%bard_desc%~ ~%bard_text%~
          END
		END
//inspiration
        PATCH_IF "%row_name%" STRING_EQUAL_CASE "BLADE" BEGIN
          READ_2DA_ENTRY index 4 col_count inspiration_desc
          SPRINT old_inspiration ~Disadvantages:~
          SPRINT new_inspiration ~Disadvantages:
– May not use Inspirations.~
          GET_STRREF %inspiration_desc% inspiration_text
          INNER_PATCH_SAVE inspiration_text ~%inspiration_text%~ BEGIN
            REPLACE_TEXTUALLY ~%old_inspiration%~ ~%new_inspiration%~
          END
          INNER_ACTION BEGIN
            STRING_SET_EVALUATE ~%inspiration_desc%~ ~%inspiration_text%~
          END
		END
//inspiration
        PATCH_IF "%row_name%" STRING_EQUAL_CASE "JESTER" BEGIN
          READ_2DA_ENTRY index 4 col_count inspiration_desc
          SPRINT old_inspiration ~Disadvantages:~
          SPRINT new_inspiration ~Disadvantages:
– May not use Inspirations.~
          GET_STRREF %inspiration_desc% inspiration_text
          INNER_PATCH_SAVE inspiration_text ~%inspiration_text%~ BEGIN
            REPLACE_TEXTUALLY ~%old_inspiration%~ ~%new_inspiration%~
          END
          INNER_ACTION BEGIN
            STRING_SET_EVALUATE ~%inspiration_desc%~ ~%inspiration_text%~
          END
		END
//inspiration
        PATCH_IF "%row_name%" STRING_EQUAL_CASE "SKALD" BEGIN
          READ_2DA_ENTRY index 4 col_count inspiration_desc
          SPRINT old_inspiration ~Disadvantages:~
          SPRINT new_inspiration ~Disadvantages:
– May not use Inspirations.~
          GET_STRREF %inspiration_desc% inspiration_text
          INNER_PATCH_SAVE inspiration_text ~%inspiration_text%~ BEGIN
            REPLACE_TEXTUALLY ~%old_inspiration%~ ~%new_inspiration%~
          END
          INNER_ACTION BEGIN
            STRING_SET_EVALUATE ~%inspiration_desc%~ ~%inspiration_text%~
          END
		END
//inspiration
        PATCH_IF "%row_name%" STRING_EQUAL_CASE "C0ABETT" BEGIN
          READ_2DA_ENTRY index 4 col_count inspiration_desc
          SPRINT old_inspiration ~Disadvantages:~
          SPRINT new_inspiration ~Disadvantages:
– May not use Inspirations.~
          GET_STRREF %inspiration_desc% inspiration_text
          INNER_PATCH_SAVE inspiration_text ~%inspiration_text%~ BEGIN
            REPLACE_TEXTUALLY ~%old_inspiration%~ ~%new_inspiration%~
          END
          INNER_ACTION BEGIN
            STRING_SET_EVALUATE ~%inspiration_desc%~ ~%inspiration_text%~
          END
		END
//inspiration
        PATCH_IF "%row_name%" STRING_EQUAL_CASE "C0DANCE" BEGIN
          READ_2DA_ENTRY index 4 col_count inspiration_desc
          SPRINT old_inspiration ~Disadvantages:~
          SPRINT new_inspiration ~Disadvantages:
– May not use Inspirations.~
          GET_STRREF %inspiration_desc% inspiration_text
          INNER_PATCH_SAVE inspiration_text ~%inspiration_text%~ BEGIN
            REPLACE_TEXTUALLY ~%old_inspiration%~ ~%new_inspiration%~
          END
          INNER_ACTION BEGIN
            STRING_SET_EVALUATE ~%inspiration_desc%~ ~%inspiration_text%~
          END
		END
//inspiration
        PATCH_IF "%row_name%" STRING_EQUAL_CASE "C0SDRUM" BEGIN
          READ_2DA_ENTRY index 4 col_count inspiration_desc
          SPRINT old_inspiration ~Disadvantages:~
          SPRINT new_inspiration ~Disadvantages:
– May not use Inspirations.~
          GET_STRREF %inspiration_desc% inspiration_text
          INNER_PATCH_SAVE inspiration_text ~%inspiration_text%~ BEGIN
            REPLACE_TEXTUALLY ~%old_inspiration%~ ~%new_inspiration%~
          END
          INNER_ACTION BEGIN
            STRING_SET_EVALUATE ~%inspiration_desc%~ ~%inspiration_text%~
          END
		END
//inspiration
        PATCH_IF "%row_name%" STRING_EQUAL_CASE "C0TRB" BEGIN
          READ_2DA_ENTRY index 4 col_count inspiration_desc
          SPRINT old_inspiration ~Disadvantages:~
          SPRINT new_inspiration ~Disadvantages:
– May not use Inspirations.~
          GET_STRREF %inspiration_desc% inspiration_text
          INNER_PATCH_SAVE inspiration_text ~%inspiration_text%~ BEGIN
            REPLACE_TEXTUALLY ~%old_inspiration%~ ~%new_inspiration%~
          END
          INNER_ACTION BEGIN
            STRING_SET_EVALUATE ~%inspiration_desc%~ ~%inspiration_text%~
          END
		END
//inspiration
        PATCH_IF "%row_name%" STRING_EQUAL_CASE "C0BDD" BEGIN
          READ_2DA_ENTRY index 4 col_count inspiration_desc
          SPRINT old_inspiration ~Disadvantages:~
          SPRINT new_inspiration ~Disadvantages:
– May not use Inspirations.~
          GET_STRREF %inspiration_desc% inspiration_text
          INNER_PATCH_SAVE inspiration_text ~%inspiration_text%~ BEGIN
            REPLACE_TEXTUALLY ~%old_inspiration%~ ~%new_inspiration%~
          END
          INNER_ACTION BEGIN
            STRING_SET_EVALUATE ~%inspiration_desc%~ ~%inspiration_text%~
          END
		END
//inspiration
        PATCH_IF "%row_name%" STRING_EQUAL_CASE "C0DEATHSINGER" BEGIN
          READ_2DA_ENTRY index 4 col_count inspiration_desc
          SPRINT old_inspiration ~Disadvantages:~
          SPRINT new_inspiration ~Disadvantages:
– May not use Inspirations.~
          GET_STRREF %inspiration_desc% inspiration_text
          INNER_PATCH_SAVE inspiration_text ~%inspiration_text%~ BEGIN
            REPLACE_TEXTUALLY ~%old_inspiration%~ ~%new_inspiration%~
          END
          INNER_ACTION BEGIN
            STRING_SET_EVALUATE ~%inspiration_desc%~ ~%inspiration_text%~
          END
		END
//inspiration
        PATCH_IF "%row_name%" STRING_EQUAL_CASE "C0_STRATEGIST" BEGIN
          READ_2DA_ENTRY index 4 col_count inspiration_desc
          SPRINT old_inspiration ~Disadvantages:~
          SPRINT new_inspiration ~Disadvantages:
– May not use Inspirations.~
          GET_STRREF %inspiration_desc% inspiration_text
          INNER_PATCH_SAVE inspiration_text ~%inspiration_text%~ BEGIN
            REPLACE_TEXTUALLY ~%old_inspiration%~ ~%new_inspiration%~
          END
          INNER_ACTION BEGIN
            STRING_SET_EVALUATE ~%inspiration_desc%~ ~%inspiration_text%~
          END
		END
//NIGHTSINGER
        PATCH_IF "%row_name%" STRING_EQUAL_CASE "C0SABARD" BEGIN
          READ_2DA_ENTRY index 4 col_count nightsinger_desc
          SPRINT old_nightsinger ~– The Nightsinger's Bard Song~
          SPRINT new_nightsinger ~– May use Dark Inspirations. Inspirations provide various benefits that persist so long as they are within visual range of the bard.
– The Nightsinger's Bard Song~
          GET_STRREF %nightsinger_desc% nightsinger_text
          INNER_PATCH_SAVE nightsinger_text ~%nightsinger_text%~ BEGIN
            REPLACE_TEXTUALLY ~%old_nightsinger%~ ~%new_nightsinger%~
          END
          INNER_ACTION BEGIN
            STRING_SET_EVALUATE ~%nightsinger_desc%~ ~%nightsinger_text%~
          END
		END
		
      END
      BUT_ONLY
    END
  END
  
COPY_EXISTING C0BDI00I.BAM ~OVERRIDE/C0BDI0IA.BAM~
COPY_EXISTING C0BDI00I.BAM ~OVERRIDE/C0BDI0IB.BAM~
COPY_EXISTING C0BDI00I.BAM ~OVERRIDE/C0BDI0IC.BAM~
COPY_EXISTING C0BDI00I.BAM ~OVERRIDE/C0BDI0ID.BAM~
COPY_EXISTING C0BDI00I.BAM ~OVERRIDE/C0BDI0IE.BAM~
COPY_EXISTING C0BDI00I.BAM ~OVERRIDE/C0BDI0IF.BAM~

LAF cd_new_portrait_icon INT_VAR string = RESOLVE_STR_REF(~Inspire Courage~) STR_VAR bam_file = C0BDI0IA RET C0BDI0IA = icon END
LAF cd_new_portrait_icon INT_VAR string = RESOLVE_STR_REF(~Inspire Competence~) STR_VAR bam_file = C0BDI0IB RET C0BDI0IB = icon END
LAF cd_new_portrait_icon INT_VAR string = RESOLVE_STR_REF(~Inspire Defense~) STR_VAR bam_file = C0BDI0IC RET C0BDI0IC = icon END
LAF cd_new_portrait_icon INT_VAR string = RESOLVE_STR_REF(~Inspire Regeneration~) STR_VAR bam_file = C0BDI0ID RET C0BDI0ID = icon END
LAF cd_new_portrait_icon INT_VAR string = RESOLVE_STR_REF(~Inspire Toughness~) STR_VAR bam_file = C0BDI0IE RET C0BDI0IE = icon END
LAF cd_new_portrait_icon INT_VAR string = RESOLVE_STR_REF(~Inspire Alacrity~) STR_VAR bam_file = C0BDI0IF RET C0BDI0IF = icon END

COPY_EXISTING C0BDI00.SPL OVERRIDE
SAY NAME1 ~Bardic Inspiration~
SAY UNIDENTIFIED_DESC ~The bard's presence inspires their companions, providing various benefits that persist so long as they are within visual range of the bard. Only one inspiration may be active at any given time.

Inspire Courage (1st level): Allies gain +1 to hit rolls and increased morale. Bonuses to hit increase to +2 at 8th level, +3 at 15th level and +4 at 22nd level.

Inspire Competence (3rd level): Allies gain +10 to Lore and Thieving Skills. Bonuses increase to +20 at 10th level and +30 at 17th level.

Inspire Defense (6th level): Allies gain +2 to Armor Class. Bonuses increase to +3 at 14th level, +4 at 22nd level.

Inspire Regeneration (10th level): Allies regenerate for 1 hit point per round. Regeneration increases to 2 hit points at 17th level and 3 hit points at 24th level.

Inspire Toughness (12th level): Allies gain +2 to all Saving Throws. Bonuses increase to +3 at 17th level and +4 at 24th level.

Inspire Alacrity (20th level): Allies gain +1 to casting speed. Bonuses increases to +2 to casting speed at 40th level.~

COPY_EXISTING C0BDI01.SPL OVERRIDE
SAY NAME1 ~Inspire Courage~
      LPF ADD_SPELL_EFFECT
      INT_VAR
	    opcode = 142
	    target = 2
		timing = 9
        parameter2 = C0BDI0IA
      END
      LPF ALTER_EFFECT
      INT_VAR
	    match_opcode = 139
		parameter1 = RESOLVE_STR_REF (~Inspiring Courage~)
      END
	  
COPY_EXISTING ~C0BDI01a.spl~ ~override~
  LPF ALTER_SPELL_HEADER
	INT_VAR
		projectile = c0bdipr
END

COPY_EXISTING C0BDI02.SPL OVERRIDE
SAY NAME1 ~Inspire Competence~
      LPF ADD_SPELL_EFFECT
      INT_VAR
	    opcode = 142
	    target = 2
		timing = 9
        parameter2 = C0BDI0IB
      END
      LPF ALTER_EFFECT
      INT_VAR
	    match_opcode = 139
		parameter1 = RESOLVE_STR_REF (~Inspiring Competence~)
      END
	  
COPY_EXISTING ~C0BDI02a.spl~ ~override~
  LPF ALTER_SPELL_HEADER
	INT_VAR
		projectile = c0bdipr
END

COPY_EXISTING C0BDI03.SPL OVERRIDE
SAY NAME1 ~Inspire Defense~
      LPF ADD_SPELL_EFFECT
      INT_VAR
	    opcode = 142
	    target = 2
		timing = 9
        parameter2 = C0BDI0IC
      END
      LPF ALTER_EFFECT
      INT_VAR
	    match_opcode = 139
		parameter1 = RESOLVE_STR_REF (~Inspiring Defense~)
      END
	  
COPY_EXISTING ~C0BDI03a.spl~ ~override~
  LPF ALTER_SPELL_HEADER
	INT_VAR
		projectile = c0bdipr
END

COPY_EXISTING C0BDI04.SPL OVERRIDE
SAY NAME1 ~Inspire Regeneration~
      LPF ADD_SPELL_EFFECT
      INT_VAR
	    opcode = 142
	    target = 2
		timing = 9
        parameter2 = C0BDI0ID
      END
      LPF ALTER_EFFECT
      INT_VAR
	    match_opcode = 139
		parameter1 = RESOLVE_STR_REF (~Inspiring Regeneration~)
      END
	  
COPY_EXISTING ~C0BDI04a.spl~ ~override~
  LPF ALTER_SPELL_HEADER
	INT_VAR
		projectile = c0bdipr
END

COPY_EXISTING C0BDI05.SPL OVERRIDE
SAY NAME1 ~Inspire Toughness~
      LPF ADD_SPELL_EFFECT
      INT_VAR
	    opcode = 142
	    target = 2
		timing = 9
        parameter2 = C0BDI0IE
      END
      LPF ALTER_EFFECT
      INT_VAR
	    match_opcode = 139
		parameter1 = RESOLVE_STR_REF (~Inspiring Toughness~)
      END
	  
COPY_EXISTING ~C0BDI05a.spl~ ~override~
  LPF ALTER_SPELL_HEADER
	INT_VAR
		projectile = c0bdipr
END

COPY_EXISTING C0BDI06.SPL OVERRIDE
SAY NAME1 ~Inspire Alacrity~
      LPF ADD_SPELL_EFFECT
      INT_VAR
	    opcode = 142
	    target = 2
		timing = 9
        parameter2 = C0BDI0IF
      END
      LPF ALTER_EFFECT
      INT_VAR
	    match_opcode = 139
		parameter1 = RESOLVE_STR_REF (~Inspiring Alacrity~)
      END
	  
COPY_EXISTING ~C0BDI06a.spl~ ~override~
  LPF ALTER_SPELL_HEADER
	INT_VAR
		projectile = c0bdipr
END

	  
OUTER_SPRINT old_bard ~– May use Bard Song ability.~ //old text

OUTER_SPRINT new_bard ~– May use Bardic Inspirations. Inspirations provide various benefits that persist so long as they are within visual range of the bard.~ //new text

INCLUDE ~BardicWonders\lib\dark_inspirations.tpa~